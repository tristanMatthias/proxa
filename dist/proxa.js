"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const isProxa=Symbol("proxa"),update=Symbol("proxaUpdate"),callbacks=Symbol("proxaCallbacks"),propCallbacks=Symbol("proxaPropCallbacks"),parent=Symbol("proxaParent"),isArray=Symbol("proxaIsArray"),off=(e,o,r)=>{const a=e;if(console.log(a[callbacks]),r){const e=a[propCallbacks].get(r);if(!e)throw new Error(`Could not find any callbacks for property '${r}'`);const t=e.indexOf(o);if(t<0)throw new Error(`Callback does not exist on property '${r}' for this object`);e.splice(t,1)}else{const e=a[callbacks].indexOf(o);if(console.log(e),e<0)throw new Error("Callback does not exist on this object");a[callbacks].splice(e,1)}return e},excludeProps=[isProxa,update,callbacks,propCallbacks,parent,isArray,"toJSON"],proxa=(e,o,r,a)=>{let t;const s={get(e,o){if(excludeProps.includes(o))return e[o];const r=e[o];return r&&!r[isProxa]&&"object"==typeof r&&(e[o]=proxa(r,void 0,void 0,t)),e[o]},set:(e,o,r)=>e[o]===r||(e[o]=r,excludeProps.includes(o)||e[update](o,r),!0)};if(e[isProxa]?t=e:((t=new Proxy(e,s))[isProxa]=!0,t[callbacks]=[],t[propCallbacks]=new Map,t[update]=(e,o)=>{t[callbacks].forEach(r=>r(t,e,o));const r=t[propCallbacks].get(e);r&&r.forEach(r=>r(t,e,o)),t[parent]&&t[parent][update]()},a&&(t[parent]=a),e instanceof Array&&(t[isArray]=!0),Object.defineProperty(t,"toJSON",{enumerable:!1,writable:!1,value:()=>{const e=Object.assign({},t);return excludeProps.forEach(o=>delete e[o]),Object.entries(e).forEach(([o,r])=>{r&&"object"==typeof r&&r[isProxa]&&(e[o]=r.toJSON())}),t[isArray]?Object.entries(e).reduce((e,[o,r])=>(/^\d+$/.test(o)&&e.push(r),e),[]):(delete e.toJSON,e)}})),o)if(r||t[callbacks].includes(o)){if(r){let e=t[propCallbacks].get(r);e||(e=[],t[propCallbacks].set(r,e)),e.push(o)}}else t[callbacks].push(o);return t};exports.off=off,exports.proxa=proxa;
