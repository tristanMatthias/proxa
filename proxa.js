"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const sIsProxa=Symbol("proxa"),sUpdate=Symbol("proxaUpdate"),sCallbacks=Symbol("proxaCallbacks"),sPropCallbacks=Symbol("proxaPropCallbacks"),sParent=Symbol("proxaParent"),sIsArray=Symbol("proxaIsArray"),excludeProps=[sIsProxa,sUpdate,sCallbacks,sPropCallbacks,sParent,sIsArray,"toJSON"],proxa=(s,e,a,r)=>{let o;const t={get(s,e){if(excludeProps.includes(e))return s[e];const a=s[e];return a&&!a[sIsProxa]&&"object"==typeof a&&(s[e]=proxa(a,void 0,void 0,o)),s[e]},set:(s,e,a)=>s[e]===a||(s[e]=a,excludeProps.includes(e)||s[sUpdate](e,a),!0)};if(s[sIsProxa]?o=s:((o=new Proxy(s,t))[sIsProxa]=!0,o[sCallbacks]=[],o[sPropCallbacks]=new Map,o[sUpdate]=(s,e)=>{o[sCallbacks].forEach(a=>a(o,s,e));const a=o[sPropCallbacks].get(s);a&&a.forEach(a=>a(o,s,e)),o[sParent]&&o[sParent][sUpdate]()},r&&(o[sParent]=r),s instanceof Array&&(o[sIsArray]=!0),Object.defineProperty(o,"toJSON",{enumerable:!1,writable:!1,value:()=>{const s=Object.assign({},o);return excludeProps.forEach(e=>delete s[e]),Object.entries(s).forEach(([e,a])=>{a&&"object"==typeof a&&a[sIsProxa]&&(s[e]=a.toJSON())}),o[sIsArray]?Object.entries(s).reduce((s,[e,a])=>(/^\d+$/.test(e)&&s.push(a),s),[]):(delete s.toJSON,s)}})),e)if(a||o[sCallbacks].includes(e)){if(a){let s=o[sPropCallbacks].get(a);s||(s=[],o[sPropCallbacks].set(a,s)),s.push(e)}}else o[sCallbacks].push(e);return o};exports.proxa=proxa;
